diff -urN rootactions_servicemenu_2.7.3/Root_Actions_2.7.3/rootactions-servicemenu.pl rootactions_servicemenu_2.7.3-patched/Root_Actions_2.7.3/rootactions-servicemenu.pl
--- rootactions_servicemenu_2.7.3/Root_Actions_2.7.3/rootactions-servicemenu.pl	2012-03-29 15:53:24.000000000 +1100
+++ rootactions_servicemenu_2.7.3-patched/Root_Actions_2.7.3/rootactions-servicemenu.pl	2012-05-29 02:40:08.196991043 +1100
@@ -856,7 +856,7 @@
 		$KDEGLOBALFILE = "$ENV{KDEHOME}/share/config/kdeglobals";
 	}
 	else {
-		$KDEGLOBALFILE = "~/.kde/share/config/kdeglobals";
+		$KDEGLOBALFILE = "~/.kde4/share/config/kdeglobals";
 	}
 
 	# use kreadconfig to get the languages set for kde. Use cut to get only the primary language and discard encoding.
@@ -875,9 +875,12 @@
 	if ( exists $ENV{KDEDIR} ) {
 		$KDEBINPATH = "$ENV{KDEDIR}/bin/";
 	}
+        elsif ( exists $ENV{KDEDIRS} ) {
+                $KDEBINPATH = "$ENV{KDEDIRS}/bin/";
+        }
 
 	else {
-		$KDEBINPATH = "";
+		$KDEBINPATH = "/usr/bin/";
 	}
 	
 }
@@ -891,11 +894,14 @@
 &get_kde_path ;
 
 # Check whether kdesudo is installed, and use it instead of kdesu to get root privileges.
-if ( `which kdesudo` ) {
+if ( -x "$KDEBINPATH"."kdesudo") {
 	$SUCOMMAND = "$KDEBINPATH"."kdesudo -d --noignorebutton --"}
-elsif ( `which kdesu` ) {
+elsif ( -x "$KDEBINPATH"."kdesu") {
 	$SUCOMMAND = "$KDEBINPATH"."kdesu -d -c"}
-else { $SUCOMMAND = "xdg-su -c"}
+elsif ( -x "/usr/lib64/kde4/libexec/kdesu") {
+	$SUCOMMAND = "/usr/lib64/kde4/libexec/kdesu -d --"}
+else {
+	$SUCOMMAND = "/usr/lib/kde4/libexec/kdesu -d --"}
 
 $DIALOGCOMMAND = "$KDEBINPATH"."kdialog" ;
 $CONFIGCOMMAND = "$KDEBINPATH"."kreadconfig" ;
@@ -911,7 +917,7 @@
 sub root_konsole_here {
 	$APPNAME = shift @ARGV ;
 	$WORKDIR = shift @ARGV ;
-	exec "$SUCOMMAND \"\'$EXECNAME\' do_root_konsole \'$APPNAME\' \'$WORKDIR\'\"";
+	exec "$SUCOMMAND \'$EXECNAME\' do_root_konsole \'$APPNAME\' \'$WORKDIR\'";
 	exit $?;
 }
 
@@ -942,7 +948,7 @@
 	$APPNAME = `$DIALOGCOMMAND --title "$OPENTITLE" --inputbox "$OPENMSG" program` ;
 	if ( $? eq 0 ) {
 	   chomp $APPNAME ;
-      	   exec "$SUCOMMAND \"\'$EXECNAME\' do_open_with \'$APPNAME\' \'$TARGET\'\"";
+      	   exec "$SUCOMMAND \'$EXECNAME\' do_open_with \'$APPNAME\' \'$TARGET\'";
 	   exit $?;
 	}
 }
@@ -976,7 +982,7 @@
 		  $APPNAME = "kwrite"; }
 	}
 
-	exec "$SUCOMMAND \"\'$EXECNAME\' do_open_with \'$APPNAME\' \'$TARGET\'\"";
+	exec "$SUCOMMAND \'$EXECNAME\' do_open_with \'$APPNAME\' \'$TARGET\'";
 	exit $?; 
 }
 
@@ -1011,7 +1017,7 @@
 	   $NEWNAME = `$DIALOGCOMMAND --title "$COPYTITLE" --inputbox "$COPYMSG" \'$OLDNAME\'` ;
 	   chop $NEWNAME;
 	   if ( $? eq 0 && $OLDNAME ne $NEWNAME ) {
-	      exec "$SUCOMMAND \"\'$EXECNAME\' do_copy \'$OLDNAME\' \'$NEWNAME\'\"";
+	      exec "$SUCOMMAND \'$EXECNAME\' do_copy \'$OLDNAME\' \'$NEWNAME\'";
 	      exit $?;
 
 	   }
@@ -1039,9 +1045,13 @@
 	# If more than one file is selected, and a batch rename application is installed, open it
 	$BATCHRENAMER = shift @ARGV ;
 	$TARGET = join("' '", @ARGV) ;
-	chomp($RENAMERPATH = `which $BATCHRENAMER`);	
+	chomp($RENAMERPATH = `which $BATCHRENAMER`);
+	if ( exists $ENV{KDEDIRS}) {
+		if ( -x $ENV{KDEDIRS}."/bin/".$BATCHRENAMER ) {
+			$RENAMERPATH = $ENV{KDEDIRS}."/bin/".$BATCHRENAMER ; }
+	}	
 	if ( $#ARGV > 0 && -x $RENAMERPATH ) {
-	   exec "$SUCOMMAND \"\'$EXECNAME\' do_open_with \'$BATCHRENAMER\' \'$TARGET\'\"";
+	   exec "$SUCOMMAND \'$EXECNAME\' do_open_with \'$BATCHRENAMER\' \'$TARGET\'";
 	   exit $?;
 	}
 	# else we'll use a simple rename script
@@ -1051,7 +1061,7 @@
 	   $NEWNAME = `$DIALOGCOMMAND --title "$RENAMETITLE" --inputbox "$RENAMEMSG" \'$OLDNAME\'` ;
 	   chop $NEWNAME;
 	   if ( $? eq 0 && $OLDNAME ne $NEWNAME ) {
-	      exec "$SUCOMMAND \"\'$EXECNAME\' do_rename \'$OLDNAME\' \'$NEWNAME\'\"";
+	      exec "$SUCOMMAND \'$EXECNAME\' do_rename \'$OLDNAME\' \'$NEWNAME\'";
 	      exit $?;
 	   }
 	}
@@ -1103,7 +1113,7 @@
 	   # kdesu will run the command as regular user if 'Ignore' is chosen from kdesu dialog.
 	   # To prevent unwanted deletion of files, we'll run 'do_delete' instead of 'rm -r', 'do delete'
 	   # will exit if it's run as normal user, therefore the files writable for user are safe when clicking 'Ignore'
-	   exec "$SUCOMMAND \"\'$EXECNAME\' do_delete \'$TARGET\'\"";
+	   exec "$SUCOMMAND \'$EXECNAME\' do_delete \'$TARGET\'";
 	}
 }
 
@@ -1131,7 +1141,7 @@
         }
 
 	# Same as with delete, we don't want kdesu to run 'chown' when 'Ignore' is pressed in the kdesu dialog, so we use 'do_ownership' instead
-	exec "$SUCOMMAND \"\'$EXECNAME\' do_ownership \'$RECURSIVE\' 0:0 \'$TARGET\'\"";
+	exec "$SUCOMMAND \'$EXECNAME\' do_ownership \'$RECURSIVE\' 0:0 \'$TARGET\'";
 	exit $?;
 }
 
@@ -1149,7 +1159,7 @@
 
 	#Create a list of user GIDs, so we can pick only the primary group
 	@GROUPS = split ' ', $);
-	exec "$SUCOMMAND \"\'$EXECNAME\' do_ownership \'$RECURSIVE\' $>:$GROUPS[0] \'$TARGET\'\"";
+	exec "$SUCOMMAND \'$EXECNAME\' do_ownership \'$RECURSIVE\' $>:$GROUPS[0] \'$TARGET\'";
 	exit $?;
 }
 
@@ -1170,7 +1180,7 @@
 
 	if ( $? eq 0 ) {
 	   chop $UIDGID;
-	   exec "$SUCOMMAND \"\'$EXECNAME\' do_ownership \'$RECURSIVE\' \'$UIDGID\' \'$TARGET\'\"";
+	   exec "$SUCOMMAND \'$EXECNAME\' do_ownership \'$RECURSIVE\' \'$UIDGID\' \'$TARGET\'";
 	   exit $?;
 	}
 }
@@ -1285,7 +1295,7 @@
 		system "$DIALOGCOMMAND --title \'$SPCTITLE\' --warningcontinuecancel \'$SPCMSG\'";
 	}
 	if ( $? eq 0 ) {
-	      exec "$SUCOMMAND \"\'$EXECNAME\' do_permissions \'$RECURSIVE\' \'$CHMOD\' \'$TARGET\'\"";
+	      exec "$SUCOMMAND \'$EXECNAME\' do_permissions \'$RECURSIVE\' \'$CHMOD\' \'$TARGET\'";
 	      exit $?;
 	}
 }
